import random
import time

def insert_sort(A):
    for j in range(1, len(A)):
        key = A[j]
        i = j - 1
        while i >= 0 and A[i] > key:
            A[i + 1] = A[i]
            i -= 1
        A[i + 1] = key
    return A

def merge_sort(A):
    if len(A) > 1:
        mid = len(A) // 2
        L = A[:mid]
        R = A[mid:]

        merge_sort(L)
        merge_sort(R)

        i = j = k = 0
        while i < len(L) and j < len(R):
            if L[i] < R[j]:
                A[k] = L[i]
                i += 1
            else:
                A[k] = R[j]
                j += 1
            k += 1

        while i < len(L):
            A[k] = L[i]
            i += 1
            k += 1

        while j < len(R):
            A[k] = R[j]
            j += 1
            k += 1
    return A

def collect_data():
    L = 100000
    G = [random.randint(0, 0x7ffffffe) for _ in range(L)]
    data = []
    for n in range(4000, L + 1, 1000):
        A = G[:n]
        start_time = time.time()
        insert_sort(A)
        end_time = time.time()
        insert_sort_time = end_time - start_time

        A = G[:n]
        start_time = time.time()
        merge_sort(A)
        end_time = time.time()
        merge_sort_time = end_time - start_time

        data.append((n, insert_sort_time, merge_sort_time))
    return data

data = collect_data()

with open('results.txt', 'w') as f:
    for item in data:
        f.write(f"{item[0]},{item[1]},{item[2]}\n")
